---
title: "Data Visualization"
author: "Lara Suys"
date: "Winter Semester 2023-2024"
output: html_document
echo: false
---

We first load all the needed libraries, as well as the original data file

```{r}
library(tidyverse)
library(ggplot2)
library(readr)
library(dplyr)
library(broom)
library(forcats)
library(GGally)
data <- read.csv2('Clara.csv')
#data
theme_set(theme_bw())
```

```{r}
#data_no_emp_zip_state <- select(data, -c(emp_title, zip_code, addr_state))
#data_no_emp_zip_state
#ggpairs(data_no_emp_zip_state)


# emp_length n/a to NA
```


## Density of the annual incomes
```{r}
density(pull(data, annual_inc))

ggplot() +
geom_density(aes(x = data$annual_inc, fill = "", alpha = 0.3), fill = "cyan3") +
scale_x_continuous(trans='log10') +
geom_vline(aes(xintercept = mean(data$annual_inc), colour = "mean"), linewidth = 1) +
geom_vline(aes(xintercept = median(data$annual_inc), color = "median"), linewidth = 0.7) +
scale_color_manual(name = "Statistics", values = c(mean = "red3", median = "navyblue")) +
labs(title = "Density of the annual incomes", x = "Annual income (in log scale)", y ="Density", colour = "Mean") +
scale_alpha(guide = 'none') +
guides(fill = 'none') 
#expand_limits(x = c(3000,9506881))
```

## Count of the different purposes
```{r}
data |> 
  ggplot(aes(y = fct_infreq(purpose))) +
  geom_bar(fill = 'cyan3') +
  geom_text(stat = "count", aes(label = scales::comma(after_stat(count))), hjust = 'inward') +
  labs(title = "Count of the different purposes", x = "Count", y = "Purpose") 
```

## Count of the Top 2 purposes
```{r}
data |> 
  ggplot(aes(y = fct_lump_n(fct_infreq(purpose), n = 2))) +
  geom_bar(fill = 'cyan3') +
  geom_text(stat = "count", aes(label = scales::comma(after_stat(count))), hjust = 'inward') +
  labs(title = "Count of the top 2 different purposes", x = "Count", y = "Purpose") 

# stack other levels
```


## Distribution of the funded amounts
```{r}
density(pull(data, funded_amnt))

ggplot() +
geom_density(aes(x = data$funded_amnt, fill = "", alpha = 0.3), fill = "cyan3") +
expand_limits(x = c(-740,37000)) +
geom_vline(aes(xintercept = mean(data$funded_amnt), colour = "mean"), linewidth = 1) +
geom_vline(aes(xintercept = median(data$funded_amnt), color = "median"), linewidth = 0.7) +
scale_color_manual(name = "Statistics", values = c(mean = "red3", median = "navyblue")) +
labs(title = "Distribution of the funded amounts", x = "Funded amounts", y ="Density", colour = "Mean") +
scale_alpha(guide = 'none') +
guides(fill = 'none')
```

## Scatter plot of the borrower's income against the funded amount
```{r}
ggplot(data, aes(x = funded_amnt, y = annual_inc)) +
  geom_point(alpha = 0.1, colour = "lightgray") +
  geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE, colour = "red3") +
  scale_y_continuous(trans = 'log10') +
  labs(x = "Funded amount", y = "Annual income (in log scale)",
      title = "Annual income of the borrower as a function of their funded amount")
```

## Count of the different loan statuses
```{r}
data |> 
  ggplot(aes(y = fct_infreq(loan_status))) +
  geom_bar(fill = 'cyan3') +
  geom_text(stat = "count", aes(label = scales::comma(after_stat(count))), hjust = 'inward') +
  labs(title = "Count of the different loan statuses", x = "Count", y = "Loan status") 
```

## Scatter plot of the borrower's debt-to-income ratio against the funded amount
```{r}
ggplot(data, aes(y = funded_amnt, x = dti)) +
  geom_point(alpha = 0.1, colour = "lightgray") +
  geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE, colour = "red3") +
  #scale_x_continuous(trans = 'log10') +
  labs(y = "Funded amount", x = "Debt-to-income",
      title = "Funded amount of the borrower as a function of their debt-to-income ratio ")
```

```{r}
#data |> 
#ggplot() +
#geom_bar(aes(x='', y = addr_state), stat="identity", width=1) +
  #coord_polar("y", start=0) +
  #theme_void()
```











